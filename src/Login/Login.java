/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Login;

import Popups.*;
import Manager.ManagerInterface;
import Employee.EmployeeInterface;
import Admin.ApplicationAdmin;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import Database.*;
import java.sql.*;

public class Login extends javax.swing.JFrame {

    ConnectDB conn = new ConnectDB();

    /**
     * Creates new form Login
     */
    public Login() {
        initComponents();
        init();
    }

    public void init() {
        setLocationRelativeTo(null);
    }

    /**
     *
     * @param id
     * @param pass
     * @return
     * @throws SQLException
     */
    public boolean compareData(int id, String pass) throws SQLException {
        // Declare variables
        ResultSet rs = null;
        PreparedStatement prdstmt = null;
        boolean result = false;
        String tempPass = "";
        int tempId = 0;

        try {
            // Create the query to be queried on the database
            String query = "SELECT id, password FROM users WHERE id=?";

            // Open connection with the database
            conn.startConnection();

            prdstmt = conn.getConnection().prepareStatement(query);
            prdstmt.setInt(1, id);

            rs = conn.performSelect(prdstmt);

            while (rs.next()) {
                tempPass = rs.getString("password");
                tempId = rs.getInt("id");
            }

            if (conn != null) {
                conn.closeConnection();
            }

            if (!tempPass.equals(pass)) {
                result = false;
            } else {
                result = true;
            }
        } catch (SQLException e) {
            System.out.println("SQL ERROR: Caught @ Line 67 : Login.Login.java");
            e.printStackTrace();
        } catch (Exception e) {
            System.out.println("ERROR: Caught @ Line 70 : Login.Login.java");
            e.printStackTrace();
        }

        return result;

    }

    /**
     *
     * @param id
     * @return
     * @throws SQLException
     */
    public int getAccountLevel(int id) throws SQLException {
        ResultSet rs = null;
        PreparedStatement ps = null;
        int accountLevel = 0;

        try {
            String query = "SELECT accountlevel FROM users WHERE id=?";

            conn.startConnection();

            ps = conn.getConnection().prepareStatement(query);
            ps.setInt(1, id);

            rs = conn.performSelect(ps);

            while (rs.next()) {
                accountLevel = rs.getInt("accountlevel");
            }
            if (conn != null) {
                conn.closeConnection();
            }
        } catch (SQLException e) {
            System.out.println("ERROR: Caught @ Line 97 : Login.Login.java");
            e.printStackTrace();
        } catch (Exception e) {
            System.out.println("ERROR: Caught @ Line 103 : Login.Login.java");
            e.printStackTrace();
        }

        return accountLevel;
    }

    /**
     * This runs all the code needed to login
     * compareData() checks login credentials for validity
     * getAccountLevel() Asks the database for the users accountLevel to open the appropriate windows
     */
    public void doLogin() {
        int tempid;
        String temppass;

        try {
            tempid = Integer.parseInt(userText.getText());
            temppass = passText.getText();
            int accountLevel = getAccountLevel(tempid);
            if (compareData(tempid, temppass)) {
                if (accountLevel == 2) {
                    new ApplicationAdmin().setVisible(true);
                    dispose();
                    System.out.println("Admin");
                } else if (accountLevel == 1) {
                    new ManagerInterface().setVisible(true);
                    dispose();
                    System.out.println("Manager");
                } else if (accountLevel == 0) {
                    new EmployeeInterface().setVisible(true);
                    dispose();
                    System.out.println("Employer");
                }
            } else {
                new InvalidPassword().setVisible(true);
            }
        } catch (Exception e) {
            new InvalidPassword().setVisible(true);
            System.out.println("ERROR: Caught @ Line 135 : Login.Login.java");
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        userLabel = new javax.swing.JLabel();
        passLabel = new javax.swing.JLabel();
        passText = new javax.swing.JPasswordField();
        userText = new javax.swing.JTextField();
        loginButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        closeButton = new javax.swing.JButton();
        languageBox = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Login");
        setName("loginFrame"); // NOI18N
        setResizable(false);

        userLabel.setText("Username:");
        userLabel.setName("userLabel"); // NOI18N

        passLabel.setText("Password:");
        passLabel.setName("passLabel"); // NOI18N

        passText.setName("passText"); // NOI18N
        passText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passTextActionPerformed(evt);
            }
        });

        userText.setName("userText"); // NOI18N
        userText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userTextActionPerformed(evt);
            }
        });

        loginButton.setText("Login");
        loginButton.setName("loginButton"); // NOI18N
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/corendon.png"))); // NOI18N

        closeButton.setText("Close");
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        languageBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "English", "Dutch" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(userLabel)
                            .addComponent(passLabel))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(userText, javax.swing.GroupLayout.DEFAULT_SIZE, 216, Short.MAX_VALUE)
                            .addComponent(passText))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(languageBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(34, 34, 34)
                .addComponent(loginButton, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(closeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(68, 68, 68))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel1)
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userLabel)
                    .addComponent(userText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passLabel)
                    .addComponent(passText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(closeButton)
                    .addComponent(loginButton)
                    .addComponent(languageBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButtonActionPerformed
        doLogin();
    }//GEN-LAST:event_loginButtonActionPerformed
    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        dispose();
    }//GEN-LAST:event_closeButtonActionPerformed

    private void passTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passTextActionPerformed
        doLogin();
    }//GEN-LAST:event_passTextActionPerformed

    private void userTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userTextActionPerformed
        passText.requestFocusInWindow();
    }//GEN-LAST:event_userTextActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;


                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closeButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JComboBox languageBox;
    private javax.swing.JButton loginButton;
    private javax.swing.JLabel passLabel;
    private javax.swing.JPasswordField passText;
    private javax.swing.JLabel userLabel;
    private javax.swing.JTextField userText;
    // End of variables declaration//GEN-END:variables
}
